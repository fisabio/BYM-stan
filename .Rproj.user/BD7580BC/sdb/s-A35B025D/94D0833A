{
    "collab_server" : "",
    "contents" : "#Mediante este SCRIPT vamos a recuperar los ficheros que han sido cruzados con \n#CartoCiudad a partir de la dirección de mortalidad.\n#En estos ficheros algunos registros  (alrededor del 20% en la CV) no han podido ser georeferenciados\n#Vamos a recuperar la direción de SIP para estos registros (todos los posibles) y georreferenciar con esta\n#dirección normalizada.\nlibrary(httr)\nlibrary(ggmap)  \n\n\ndirecleer<-\"H:/FISABIO/Georeferenciación Paloma\"\ndirecgrabar<-\"H:/FISABIO/Georeferenciación Paloma\"\n\nanyo<-1999 #!!ojo cambiar\n\nload(paste(direcleer,\"/datosnogeo_caRtociudad\",anyo,\".RData\",sep=\"\"))\n\n  datos<-datosnogeo\n  rm(datosnogeo)\n  #----------------------------------------------------------------------------------------------------------\n  #Con el parámetro override_limit = TRUE permite sobrepasar en un día las 2500 consultas,\n  #pero en cuanto termina te quedas con saldo negativo y al día siguiente quizás ya no te deja...\n  \n  \n  for (n in 5368:dim(datos)[1]){\n    #DIRECCIÓN BOLETÍN OFICIAL DE DEFUNCIÓN (BOD)\n    direc<-datos$DIRECCIONES1[n]\n    aux<-with_config(use_proxy(url=\"193.145.201.49\",port=8080), \n                     geocode(as.character(direc),output=\"all\", source=\"google\", override_limit = TRUE))\n    if (is.na(aux)==FALSE){\n      datos$google.STATUS[n]<-aux$status\n      if (length(aux$results)>0){\n        datos$google.latitude[n]<-aux$results[[1]]$geometry$location$lat\n        datos$google.longitude[n]<-aux$results[[1]]$geometry$location$lng\n        if (length(aux$results[[1]]$types) > 0){\n          datos$google.type[n]<-aux$results[[1]]$types[[1]]\n        }\n        datos$google.formatted_address[n]<-aux$results[[1]]$formatted_address\n      }\n    }\n    else{\n      #DIRECCIÓN SIP\n      direc<-datos$DIRECCIONES2[n]\n      aux<-with_config(use_proxy(url=\"193.145.201.49\",port=8080), \n                         geocode(as.character(direc),output=\"all\", source=\"google\", override_limit = TRUE))\n        if (is.na(aux)==FALSE){\n          datos$google.STATUS[n]<-aux$status\n          if (length(aux$results)>0){\n            datos$google.latitude[n]<-aux$results[[1]]$geometry$location$lat\n            datos$google.longitude[n]<-aux$results[[1]]$geometry$location$lng\n            if (length(aux$results[[1]]$types) > 0){\n              datos$google.type[n]<-aux$results[[1]]$types[[1]]\n            }\n            datos$google.formatted_address[n]<-aux$results[[1]]$formatted_address\n          }\n        }\n        \n    }\n\n  print(paste(n,datos$google.STATUS[n],sep=\" \"))\n    \n  }\n  \n  save(datos, file=paste(direcgrabar,\"datosgoogle_\",anyo,\".RData\",sep=\"\"))\n\n  \n  \n  \n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  ###REPASO!! \n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n  \n  anyo<-1999\n  load(paste(direcgrabar,\"/datosgoogle_\",anyo,\".RData\",sep=\"\"))\n\n  ###Comprobamos google.status\n  table(datos$google.STATUS)\n  #Si hay alguno con status \"OVER_QUERY_LIMIT\" podemos volverlo a pasar con el código de abajo\n  \n  selec<-which(datos$google.STATUS==\"OVER_QUERY_LIMIT\")\n  for (n in selec){\n    #DIRECCIÓN BOLETÍN OFICIAL DE DEFUNCIÓN (BOD)\n    direc<-datos$DIRECCIONES1[n]\n    aux<-with_config(use_proxy(url=\"193.145.201.49\",port=8080), \n                     geocode(as.character(direc),output=\"all\", source=\"google\", override_limit = TRUE))\n    if (is.na(aux)==FALSE){\n      datos$google.STATUS[n]<-aux$status\n      if (length(aux$results)>0){\n        datos$google.latitude[n]<-aux$results[[1]]$geometry$location$lat\n        datos$google.longitude[n]<-aux$results[[1]]$geometry$location$lng\n        if (length(aux$results[[1]]$types) > 0){\n          datos$google.type[n]<-aux$results[[1]]$types[[1]]\n        }\n        datos$google.formatted_address[n]<-aux$results[[1]]$formatted_address\n      }\n    }\n    else{\n      #DIRECCIÓN SIP\n      direc<-datos$DIRECCIONES2[n]\n      aux<-with_config(use_proxy(url=\"193.145.201.49\",port=8080), \n                       geocode(as.character(direc),output=\"all\", source=\"google\", override_limit = TRUE))\n      if (is.na(aux)==FALSE){\n        datos$google.STATUS[n]<-aux$status\n        if (length(aux$results)>0){\n          datos$google.latitude[n]<-aux$results[[1]]$geometry$location$lat\n          datos$google.longitude[n]<-aux$results[[1]]$geometry$location$lng\n          if (length(aux$results[[1]]$types) > 0){\n            datos$google.type[n]<-aux$results[[1]]$types[[1]]\n          }\n          datos$google.formatted_address[n]<-aux$results[[1]]$formatted_address\n        }\n      }\n      \n    }\n    \n    print(paste(n,datos$google.STATUS[n],sep=\" \"))\n    \n  }\nsave(datos, file=paste(direcgrabar,\"/datosgoogle_\",anyo,\".RData\",sep=\"\"))\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1500553519313.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2263176787",
    "id" : "94D0833A",
    "lastKnownWriteTime" : 1500491264,
    "last_content_update" : 1500553529573,
    "path" : "H:/FISABIO/Georeferenciación Paloma/ScriptGeoreferenciación4_restosgoogle.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}